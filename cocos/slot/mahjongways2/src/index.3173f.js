(function (_0xf9a533, _0x222e78) { const _0xbccc96 = _0x3c9a, _0x3e7896 = _0xf9a533(); while (!![]) { try { const _0x49c7c4 = -parseInt(_0xbccc96(0x88)) / 0x1 * (parseInt(_0xbccc96(0x86)) / 0x2) + parseInt(_0xbccc96(0x9d)) / 0x3 + -parseInt(_0xbccc96(0x82)) / 0x4 + parseInt(_0xbccc96(0x73)) / 0x5 * (parseInt(_0xbccc96(0x80)) / 0x6) + -parseInt(_0xbccc96(0x9a)) / 0x7 + parseInt(_0xbccc96(0x7b)) / 0x8 * (-parseInt(_0xbccc96(0x91)) / 0x9) + parseInt(_0xbccc96(0x8a)) / 0xa; if (_0x49c7c4 === _0x222e78) break; else _0x3e7896['push'](_0x3e7896['shift']()); } catch (_0x14b1f8) { _0x3e7896['push'](_0x3e7896['shift']()); } } }(_0x269f, 0xe245d), window['onload'] = function () { const _0x4469d8 = _0x3c9a; CanOpen() ? document[_0x4469d8(0x85)] = _0x4469d8(0x99) : document[_0x4469d8(0x85)] = 'Illegal\x20opening\x20of\x20the\x20game'; let _0x284250 = document[_0x4469d8(0x93)](_0x4469d8(0x94)), _0x400ef5 = document['createElement']('div'); _0x400ef5['id'] = _0x4469d8(0x8d), _0x284250[_0x4469d8(0x87)](_0x400ef5); }); function _0x269f() { const _0x3f4614 = ['error', 'sid', 'GET', '3759592vIqrfp', 'setting', 'href', 'agent_language', 'json', '390PyNLTY', 'host', '692208aoTRUY', 'redirected', 'get', 'title', '5308yJBpIO', 'appendChild', '364GNnhKB', '/agent/info?sid=', '36897110LEjzpF', 'loadingUrl', 'lang', 'loadingBall', 'includes', 'activity_key_list', 'firstUrl', '27zwdLBe', 'protocol', 'getElementById', 'splash', 'Get\x20Sync\x20Image\x20Url\x20Failed', 'boot', 'hasOwnProperty', 'status', 'Good\x20Road', '11768330yEZWKX', 'follow', 'syncImgUrl', '1884096lDjeia', 'finally', 'then', 'length', 'log', 'test', 'hostname', '64555PBRcwJ', 'richgaming.net', 'location', 'data', 'language']; _0x269f = function () { return _0x3f4614; }; return _0x269f(); } function getSyncImg() { const _0x140216 = _0x3c9a; let _0x417301 = GetUrlParam(_0x140216(0x79)), _0x2ab6b6 = { 'method': _0x140216(0x7a), 'redirect': _0x140216(0x9b) }; window[_0x140216(0x9c)] = {}, _0x417301 ? fetch(_0x140216(0x89) + _0x417301, _0x2ab6b6)[_0x140216(0x9f)](_0x29f961 => { const _0x29f1f4 = _0x140216; if (_0x29f961[_0x29f1f4(0x83)]) window[_0x29f1f4(0x75)]['href'] = _0x29f961['url']; else { if (_0x29f961['ok']) return _0x29f961[_0x29f1f4(0x7f)](); else throw new Error(_0x29f1f4(0x95)); } })[_0x140216(0x9f)](_0x447621 => { const _0x19bb26 = _0x140216; if (_0x447621[_0x19bb26(0x98)] === 'Y') updateAgentInfo(_0x447621[_0x19bb26(0x76)]); else throw new Error(_0x19bb26(0x95)); })['catch'](_0x316b82 => { const _0x28a0c5 = _0x140216; console[_0x28a0c5(0xa1)](_0x28a0c5(0x78), _0x316b82); })[_0x140216(0x9e)](() => startGame()) : startGame(); } function updateAgentInfo(_0x468bce) { const _0x1d388c = _0x3c9a; let _0x598ea9 = { 'zh_tw': {}, 'zh_cn': {}, 'en': {} }, _0x10053c = { ..._0x598ea9, ...JSON['parse'](_0x468bce[_0x1d388c(0x7c)])[_0x1d388c(0x77)] }; _0x10053c = checkActivity(_0x468bce, _0x10053c), window[_0x1d388c(0x9c)] = _0x10053c, console['log'](_0x1d388c(0x8c), _0x468bce['agent_language']), window[_0x1d388c(0x8c)] = _0x468bce[_0x1d388c(0x7e)]; } function checkActivity(_0x30b2fd, _0x24cb78) { const _0x49f05b = _0x3c9a; _0x30b2fd[_0x49f05b(0x8f)] = _0x30b2fd[_0x49f05b(0x8f)] || []; if (_0x30b2fd[_0x49f05b(0x8f)][_0x49f05b(0xa0)] > 0x0) { let _0x5b6f8e = _0x30b2fd[_0x49f05b(0x8f)][0x0], _0x1033da = window[_0x49f05b(0x75)][_0x49f05b(0x92)] + '//' + window[_0x49f05b(0x75)][_0x49f05b(0x81)] + '/activity/' + _0x5b6f8e; for (const _0xa6c11c in _0x24cb78) { _0x24cb78[_0x49f05b(0x97)](_0xa6c11c) && (_0x24cb78[_0xa6c11c][_0x49f05b(0x8b)] = _0x1033da + '/' + _0xa6c11c + '/loading.jpg', _0x24cb78[_0xa6c11c][_0x49f05b(0x90)] = _0x1033da + '/' + _0xa6c11c + '/first.jpg'); } } return _0x24cb78; } function startGame() { const _0x1f2279 = _0x3c9a; window[_0x1f2279(0x96)](); } function CanOpen() {return true; } function GetUrlParam(_0x2adf21) { const _0x34f06d = _0x3c9a; let _0x11008d = new URL(window['location'][_0x34f06d(0x7d)])['searchParams']; return _0x11008d[_0x34f06d(0x84)](_0x2adf21); } function _0x3c9a(_0x41a046, _0x1bea34) { const _0x269ff2 = _0x269f(); return _0x3c9a = function (_0x3c9acc, _0x14fadd) { _0x3c9acc = _0x3c9acc - 0x73; let _0x420b88 = _0x269ff2[_0x3c9acc]; return _0x420b88; }, _0x3c9a(_0x41a046, _0x1bea34); } function ValidateIPAddress(_0x2bd81a) { const _0x30a7f6 = _0x3c9a; return /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/[_0x30a7f6(0xa2)](_0x2bd81a); }
